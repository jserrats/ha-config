
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

homeassistant:
  customize: !include customize.yaml

mqtt:
  broker: localhost

yeelight:
  devices:
    yeelink-light-color1_miio57615092.lan:
      name: Bedroom yeelight

media_extractor:

light:
  - platform: template
    lights:
      ambient_light:  
        friendly_name: "Ambient light"
        turn_on:
          service: mqtt.publish
          data:
            topic: "domos/arduino/pin/0"
            payload: "on"
            qos: 2
            retain: true
        turn_off:
          service: mqtt.publish
          data:
            topic: "domos/arduino/pin/0"
            payload: "off"
            qos: 2
            retain: true
spotify:
  client_id: !secret spotify_client_id
  client_secret: !secret spotify_client_secret

synology_dsm:
  - host: localhost
    username: !secret synology_user
    password: !secret synology_password
    
lcd:
cron:

telegram_bot:
  - platform: broadcast
    api_key: !secret telegram_api_key
    allowed_chat_ids:
      - !secret telegram_chat_id
notify:
  - name: Telegram notification
    platform: telegram
    chat_id: !secret telegram_chat_id

octoprint:
  host: octopi.lan
  api_key: !secret octoprint_api_key
  bed: true

camera:
  - platform: generic
    name: Octopi Camera
    stream_source: http://octopi.lan/webcam/?action=stream
    still_image_url: http://octopi.lan:8080/?action=snapshot

glances:
  - host: octane.lan
    name: "Octane"
    verify_ssl: false
  - host: nibbler.lan
    name: "Nibbler"
    verify_ssl: false
  - host: raspberry.lan
    name: "Raspberry"
    verify_ssl: false

tts:
  - platform: google_translate

sensor:
  - platform: mqtt
    state_topic: "domos/arduino/info/meteo"
    name: "Indoor temperature"
    value_template: '{{ "{:2.1f}".format(float(value_json.temperature)) }}'
    unit_of_measurement: '°C'
  - platform: mqtt
    state_topic: "domos/arduino/info/meteo"
    name: "Indoor humidity"
    value_template: '{{ "{:2.1f}".format(float(value_json.humidity)) }}'
    unit_of_measurement: '%'
  - platform: mqtt
    state_topic: "domos/arduino/info/meteo"
    name: "Indoor pressure"
    value_template: '{{ "{:2.1f}".format(float(value_json.pressure)) }}'
    unit_of_measurement: 'hPa'
  - platform: github
    access_token: !secret github_access_token
    repositories:
      - path: 'jserrats/notes'
  - platform: template
    sensors:
      outdoor_temp:
        friendly_name: "Outdoor temperature"
        unit_of_measurement: °C
        value_template: '{{ state_attr("weather.can_gaudir","temperature") }}'
      outdoor_hum:
        friendly_name: "Outdoor humidity"
        unit_of_measurement: '%'
        value_template: '{{ state_attr("weather.can_gaudir","humidity") }}'
      outdoor_pressure:
        friendly_name: "Outdoor pressure"
        unit_of_measurement: 'hPa'
        value_template: '{{ state_attr("weather.can_gaudir","pressure") }}'
  - platform: cert_expiry
    host: blog.jserrats.xyz
  - platform: cert_expiry
    host: jserrats.xyz
  - platform: bitcoin
    display_options:
      - exchangerate
      - trade_volume_btc
switch:
  - platform: template
    switches:
      backlight:
        friendly_name: LCD Backlight
        value_template: "{{ is_state('lcd.backlight', 'on') }}"
        turn_on:
          service: lcd.backlight_on
        turn_off:
          service: lcd.backlight_off
      desk:
        friendly_name: Desk
        value_template: '{{ is_state("binary_sensor.nibbler","on") or is_state("binary_sensor.octane","on") }}'
        turn_on:
          service: script.1583058928601
        turn_off:
          service: script.1583057164355
  - platform: mqtt
    name: "Power Switch 0"
    command_topic: "domos/arduino/power/0"
    state_topic: "domos/arduino/power/0"
    payload_on: "on"
    payload_off: "off"
    state_on: "on"
    state_off: "off"
    qos: 0
    retain: true
  - platform: mqtt
    name: "Power Switch 1"
    command_topic: "domos/arduino/power/1"
    state_topic: "domos/arduino/power/1"
    payload_on: "on"
    payload_off: "off"
    state_on: "on"
    state_off: "off"
    qos: 0
    retain: true
  - platform: wake_on_lan
    mac: "b4:2e:99:16:4d:7c"
    name: "Octane WoL"
    host: "octane.lan"
    turn_off:
      service: shell_command.octane_off
  - platform: wake_on_lan
    mac: "84:39:be:17:02:21"
    name: "Nibbler WoL"
    host: "nibbler.lan"
    turn_off:
      service: shell_command.nibbler_off
shell_command:
  # to debug these, log inside the docker and run them manually and see which errors we get
  octane_off: 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/id_rsa_ha jaume@octane.lan shutdown /h /f'
  nibbler_off: 'ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i /config/id_rsa_ha jaume@nibbler.lan sudo poweroff'

binary_sensor:
  - platform: ping
    host: octane.lan
    name: Octane
  - platform: ping
    host: nibbler.lan
    name: Nibbler
  - platform: ping
    host: octopi.lan
    name: Octopi
  - platform: ping
    host: raspberry.lan
    name: Raspberry

media_player:
  - platform: mpd
    host: 192.168.0.15
    
group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml